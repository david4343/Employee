<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hybrid.mapper.EmpMapper">
	<select id="selectAll" resultType="com.hybrid.model.Emp">
		select empno,
			   ename,
			   job,
			   mgr,
			   hiredate,
			   sal,
			   comm,
			   deptno
		  from emp
	</select>
	
	<!-- selectByEmpno의 결과에 대한 Mapping을 해줘야한다. id는 pk이며, result는 pk 이외의 컬럼. -->
	<!-- column은 query문에서 as뒤에 사용한 이름이고, property는 model에 해당하는 이름이다. -->
	<!-- Join하여 발생된 다른 Model Bean에 대한 처리는 association을 사용한다. -->
	<!-- association은 1:1 관계일 때만 사용가능하다 -->
	<!-- 1:N 관계이면 collection을 사용한다. -->
	<resultMap type="com.hybrid.model.Emp" id="resultEmp">
		<id     column="emp_empno"    property="empno"/>
		<result column="emp_ename"    property="ename"/>
		<result column="emp_job"      property="job"/>
		<result column="emp_mgr"      property="mgr"/>
		<result column="emp_hiredate" property="hiredate"/>
		<result column="emp_sal"      property="sal"/>
		<result column="emp_comm"     property="comm"/>
		<result column="emp_deptno"   property="deptno"/>
		<association property="dept" javaType="com.hybrid.model.Dept">
			<id     column="dept_deptno"  property="deptno" />
			<result column="dept_dname"   property="dname" />
			<result column="dept_loc"     property="loc" />
		</association>
	</resultMap>
	
	<!-- Join과 as를 사용하여 컬럼명과 Model이 Mapping이 안되므로, 별도로 resultMap에서 컬럼명과 model의 Mapping을 처리해줘야한다. -->
	<select id="selectByEmpno" resultType="com.hybrid.model.Emp" resultMap="resultEmp">
		select e.empno 				as emp_empno,
			   e.ename 				as emp_ename,
			   e.job 				as emp_job,
			   e.mgr 				as emp_mgr,
			   e.hiredate 			as emp_hiredate,
			   e.sal 				as emp_sal,
			   e.comm				as emp_comm,
			   e.deptno				as emp_deptno,
			   d.deptno				as dept_deptno,
			   d.dname 				as dept_dname,
			   d.loc 				as dept_loc
		  from emp e left join dept d
		    on e.deptno = d.deptno 
		 where empno = #{empno}
	</select>
	<select id="selectMgrs" resultType="com.hybrid.model.Mgr">
		select empno,
			   ename
		  from emp
		 order by empno asc
	</select>
	
	<!-- MyBatis를 사용하여 자바의 null을 DB의 null로 넣어주기 위해선 jdbcType을 지정해야한다. jdbcType의 값은 대문자로 작성한다. -->
	<insert id="insert" parameterType="com.hybrid.model.Emp">
	insert into emp
		(
			empno,
		    ename,
		    job,
		    mgr,
		    hiredate,
		    sal,
		    comm,
		    deptno
		)
		values
		(
			#{empno},
			#{ename},
			#{job, jdbcType=VARCHAR},
			#{mgr, jdbcType=NUMERIC},
			#{hiredate, jdbcType=TIMESTAMP},
			#{sal, jdbcType=NUMERIC},
			#{comm, jdbcType=NUMERIC},
			#{deptno, jdbcType=NUMERIC}
		)
	</insert>
	<update id="updateByEmpno" parameterType="com.hybrid.model.Emp">
		update emp
		   set ename = #{ename},
		       job = #{job, jdbcType=VARCHAR},
		       mgr = #{mgr, jdbcType=NUMERIC},
		       hiredate = #{hiredate, jdbcType=TIMESTAMP},
		       sal = #{sal, jdbcType=NUMERIC},
		       comm = #{comm, jdbcType=NUMERIC},
		       deptno = #{deptno, jdbcType=NUMERIC}
		 where empno = #{empno}  
	</update>
	<delete id="deleteByEmpno" parameterType="int">
		delete from emp
		 where empno = #{empno}
	</delete>
</mapper>
